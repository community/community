#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative "../lib/github"

stale_label_id = "LA_kwDOEfmk4M8AAAABYVCU-g"
owner = "community"
repo = "community"
only_these_categories = ["Copilot", "Projects and Issues", "Accessibility"]

body =<<BODY
🕒 **Stale Discussion Alert** 🕒

This Discussion has been labeled as stale by an automated system for having no activity in the last 60 days. Please consider one the following actions:

1️⃣ Close as Out of Date: If the topic is no longer relevant, close the Discussion as "out of date" at the bottom of the page.

2️⃣ Provide More Information: Share additional details or context — or let the community know if you've found a solution on your own.

3️⃣ Mark a Reply as Answer: If your question has been answered by a reply, mark the most helpful reply as the solution.

Note: This stale notification will only apply to Discussions with the `Question` label. To learn more, see our recent stalebot announcement.

Thank you for helping bring this Discussion to a resolution! 💬
BODY

categories = Category.all(owner:, repo:).select { |c| only_these_categories.include?(c.name) }

categories.map do |category|
  category.discussions = Discussion.all(owner:, repo:, category:)
end

categories.each do |c|
  puts "#{c.name} has #{c.discussions.count} eligible discussion(s)"
end

# for initial testing, don't modify any discussions
#categories.each do |category|
#  category.discussions.each do |discussion|
#    discussion.add_comment(body: body)
#    discussion.add_label(label_id: stale_label_id)
#  end
#end
